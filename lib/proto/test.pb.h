/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Sep 23 00:35:29 2019. */

#ifndef PB_TEST_PB_H_INCLUDED
#define PB_TEST_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Info {
    int32_t type;
    char data[100];
/* @@protoc_insertion_point(struct:Info) */
} Info;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Info_init_default                        {0, ""}
#define Info_init_zero                           {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Info_type_tag                            1
#define Info_data_tag                            2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Info_fields[3];

/* Maximum encoded size of messages (where known) */
#define Info_size                                113

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TEST_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
